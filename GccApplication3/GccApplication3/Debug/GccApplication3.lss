
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000206  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000025a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001199  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000eb8  00000000  00000000  000014bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004cd  00000000  00000000  00002375  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  00002844  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000067d  00000000  00000000  000028d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001bf  00000000  00000000  00002f51  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00003110  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	85 c0       	rjmp	.+266    	; 0x202 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#include "surveyaan_read_write.h"
using namespace std;
	
int main(void)
{
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	28 97       	sbiw	r28, 0x08	; 8
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	f8 94       	cli
 108:	de bf       	out	0x3e, r29	; 62
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	cd bf       	out	0x3d, r28	; 61
	
	pin cb(&PORTB,&DDRB,&PINB,6);
 10e:	06 e0       	ldi	r16, 0x06	; 6
 110:	23 e2       	ldi	r18, 0x23	; 35
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	44 e2       	ldi	r20, 0x24	; 36
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	65 e2       	ldi	r22, 0x25	; 37
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	ce 01       	movw	r24, r28
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	11 d0       	rcall	.+34     	; 0x144 <_ZN3pinC1EPVhS1_S1_h>
	cb.direction(INPUT);
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	ce 01       	movw	r24, r28
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	18 d0       	rcall	.+48     	; 0x15a <_ZN3pin9directionE14pinDirection_t>
	
	while(1){
		
			cb.inp();
 12a:	ce 01       	movw	r24, r28
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	5b d0       	rcall	.+182    	; 0x1e6 <_ZN3pin3inpEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 130:	2f ef       	ldi	r18, 0xFF	; 255
 132:	83 ed       	ldi	r24, 0xD3	; 211
 134:	90 e3       	ldi	r25, 0x30	; 48
 136:	21 50       	subi	r18, 0x01	; 1
 138:	80 40       	sbci	r24, 0x00	; 0
 13a:	90 40       	sbci	r25, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <main+0x3c>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0x46>
 140:	00 00       	nop
 142:	f3 cf       	rjmp	.-26     	; 0x12a <main+0x30>

00000144 <_ZN3pinC1EPVhS1_S1_h>:
	{
		case(OUTPUT):
		if (val){
		*port_n |= (val<<pin_n);}
		else{
			*port_n &=~(1<<pin_n);
 144:	0f 93       	push	r16
 146:	fc 01       	movw	r30, r24
 148:	71 83       	std	Z+1, r23	; 0x01
 14a:	60 83       	st	Z, r22
 14c:	53 83       	std	Z+3, r21	; 0x03
 14e:	42 83       	std	Z+2, r20	; 0x02
 150:	35 83       	std	Z+5, r19	; 0x05
 152:	24 83       	std	Z+4, r18	; 0x04
 154:	06 83       	std	Z+6, r16	; 0x06
 156:	0f 91       	pop	r16
 158:	08 95       	ret

0000015a <_ZN3pin9directionE14pinDirection_t>:
 15a:	fc 01       	movw	r30, r24
 15c:	67 83       	std	Z+7, r22	; 0x07
 15e:	66 23       	and	r22, r22
 160:	19 f0       	breq	.+6      	; 0x168 <_ZN3pin9directionE14pinDirection_t+0xe>
 162:	61 30       	cpi	r22, 0x01	; 1
 164:	b1 f0       	breq	.+44     	; 0x192 <_ZN3pin9directionE14pinDirection_t+0x38>
 166:	2a c0       	rjmp	.+84     	; 0x1bc <_ZN3pin9directionE14pinDirection_t+0x62>
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	06 80       	ldd	r0, Z+6	; 0x06
 16e:	02 c0       	rjmp	.+4      	; 0x174 <_ZN3pin9directionE14pinDirection_t+0x1a>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <_ZN3pin9directionE14pinDirection_t+0x16>
 178:	80 95       	com	r24
 17a:	a0 81       	ld	r26, Z
 17c:	b1 81       	ldd	r27, Z+1	; 0x01
 17e:	9c 91       	ld	r25, X
 180:	98 23       	and	r25, r24
 182:	9c 93       	st	X, r25
 184:	02 80       	ldd	r0, Z+2	; 0x02
 186:	f3 81       	ldd	r31, Z+3	; 0x03
 188:	e0 2d       	mov	r30, r0
 18a:	90 81       	ld	r25, Z
 18c:	89 23       	and	r24, r25
 18e:	80 83       	st	Z, r24
 190:	08 95       	ret
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	06 80       	ldd	r0, Z+6	; 0x06
 198:	02 c0       	rjmp	.+4      	; 0x19e <_ZN3pin9directionE14pinDirection_t+0x44>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	0a 94       	dec	r0
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <_ZN3pin9directionE14pinDirection_t+0x40>
 1a2:	a2 81       	ldd	r26, Z+2	; 0x02
 1a4:	b3 81       	ldd	r27, Z+3	; 0x03
 1a6:	9c 91       	ld	r25, X
 1a8:	98 2b       	or	r25, r24
 1aa:	9c 93       	st	X, r25
 1ac:	80 95       	com	r24
 1ae:	01 90       	ld	r0, Z+
 1b0:	f0 81       	ld	r31, Z
 1b2:	e0 2d       	mov	r30, r0
 1b4:	90 81       	ld	r25, Z
 1b6:	89 23       	and	r24, r25
 1b8:	80 83       	st	Z, r24
 1ba:	08 95       	ret
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	06 80       	ldd	r0, Z+6	; 0x06
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <_ZN3pin9directionE14pinDirection_t+0x6e>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	0a 94       	dec	r0
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <_ZN3pin9directionE14pinDirection_t+0x6a>
 1cc:	a0 81       	ld	r26, Z
 1ce:	b1 81       	ldd	r27, Z+1	; 0x01
 1d0:	9c 91       	ld	r25, X
 1d2:	98 2b       	or	r25, r24
 1d4:	9c 93       	st	X, r25
 1d6:	80 95       	com	r24
 1d8:	02 80       	ldd	r0, Z+2	; 0x02
 1da:	f3 81       	ldd	r31, Z+3	; 0x03
 1dc:	e0 2d       	mov	r30, r0
 1de:	90 81       	ld	r25, Z
 1e0:	89 23       	and	r24, r25
 1e2:	80 83       	st	Z, r24
 1e4:	08 95       	ret

000001e6 <_ZN3pin3inpEv>:
		break;
	}
}
 void pin::inp(void)
{
	if(this->dir == INPUT || this->dir == INPUT_PULLUP)
 1e6:	dc 01       	movw	r26, r24
 1e8:	17 96       	adiw	r26, 0x07	; 7
 1ea:	2c 91       	ld	r18, X
 1ec:	22 23       	and	r18, r18
 1ee:	11 f0       	breq	.+4      	; 0x1f4 <_ZN3pin3inpEv+0xe>
 1f0:	22 30       	cpi	r18, 0x02	; 2
 1f2:	31 f4       	brne	.+12     	; 0x200 <_ZN3pin3inpEv+0x1a>
	{
		uint8_t ab = (*pen_n >>(pin_n)) & (0x01);
 1f4:	dc 01       	movw	r26, r24
 1f6:	14 96       	adiw	r26, 0x04	; 4
 1f8:	ed 91       	ld	r30, X+
 1fa:	fc 91       	ld	r31, X
 1fc:	15 97       	sbiw	r26, 0x05	; 5
 1fe:	80 81       	ld	r24, Z
 200:	08 95       	ret

00000202 <_exit>:
 202:	f8 94       	cli

00000204 <__stop_program>:
 204:	ff cf       	rjmp	.-2      	; 0x204 <__stop_program>
